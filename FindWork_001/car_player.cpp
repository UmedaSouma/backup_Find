//===========================================================================================================================================================
// 
// プレイヤーの車 [car_player.cpp]
// Author : souma umeda
// 
//===========================================================================================================================================================
#include "car_player.h"
#include "manager.h"
#include "fade.h"

//========================================================================================================================
// コンストラクタ
//========================================================================================================================
CCarPlayer::CCarPlayer() :m_pGauge(nullptr)
{

}

//========================================================================================================================
// デストラクタ
//========================================================================================================================
CCarPlayer::~CCarPlayer()
{
}

//========================================================================================================================
// 初期設定
//========================================================================================================================
HRESULT CCarPlayer::Init()
{
	CCamera* pCamera = CManager::GetCamera();
	if(pCamera!=nullptr)
	{
		pCamera->SetCameraTarget(CCamera::PLAYER);
	}

	SetType(TYPE::CAR_PLAYER);
	SetSize({ 10.0f,10.0f,30.0f });
	SetPos({ -250.0f,0.0f,0.0f });

	m_pGauge = CGauge::Create();

	CCar::Init();

	return S_OK;
}

//========================================================================================================================
// 終了処理
//========================================================================================================================
void CCarPlayer::Uninit()
{
	CCar::Uninit();
}

//========================================================================================================================
// 更新処理
//========================================================================================================================
void CCarPlayer::Update()
{
	CCamera* pCamera = CManager::GetCamera();
	D3DXVECTOR3 move = GetMove();
	
	if (pCamera != nullptr)
	{
		D3DXVECTOR3 rot = GetRot();
		D3DXVECTOR3 camerarot = pCamera->GetRot();

		pCamera->SetRot({ camerarot.x,rot.y,camerarot.z });
	}

	move.y -= 3.0f;	// 重力加算
	SetMove(move);

	UpdateGauge();

	CCar::Update();

	// 一旦ここで殺しておく
	if (GetPos().y < -250.0f||m_pGauge->GetCurrValue()<=0)
	{
		CFade* pFade = CManager::GetFade();
		pFade->SetFade(CScene::MODE_GAME);
	}
}

//========================================================================================================================
// 描画処理
//========================================================================================================================
void CCarPlayer::Draw()
{
	CCar::Draw();
}

//===========================================================================================================
// 車変更処理
//===========================================================================================================
void CCarPlayer::ChangeCar(CParamStorage::TYPE hittype)
{
	InitType(hittype);
}

//========================================================================================================================
// 生成処理
//========================================================================================================================
CCarPlayer* CCarPlayer::Create(CParamStorage::TYPE cartype)
{
	CCarPlayer* pCarPlayer = new CCarPlayer;

	pCarPlayer->InitType(cartype);

	pCarPlayer->Init();

	return pCarPlayer;
}

//===========================================================================================================
// ゲージのアップデート
//===========================================================================================================
void CCarPlayer::UpdateGauge()
{
	if (m_pGauge == nullptr)
	{	return;	}
	float Curr = m_pGauge->GetCurrValue();

	float Speed = GetAccumulationSpeed();
	if (Speed <= 0)
	{	return; }

	Speed *= 0.1f;

	m_pGauge->SetCurrValue(Curr - Speed);
}

//===========================================================================================================
// ゲージの回復処理
//===========================================================================================================
void CCarPlayer::SetRecoveryGauge(int n)
{
	float Curr = m_pGauge->GetCurrValue();

	if (Curr+n >= m_pGauge->GetMaxValue())
	{// 最大値を超えたら
		m_pGauge->SetCurrValue(m_pGauge->GetMaxValue());	// 最大値に設定する
		return;
	}

	m_pGauge->SetCurrValue(Curr + n);
}
