//===========================================================================================================================================================
// 
// ライトの設定
// Author : souma umeda
// 
//===========================================================================================================================================================
#include "light.h"
#include "manager.h"

int CLight::m_NumAll = 0;

//================================================================================================================
// コンストラクタ
//================================================================================================================
CLight::CLight()
{
	// ライト情報のクリア
	ZeroMemory(&m_aLight[0], sizeof(D3DLIGHT9));
	m_NumAll++;
}

//================================================================================================================
// デストラクタ
//================================================================================================================
CLight::~CLight()
{
	m_NumAll--;
}

//================================================================================================================
// 初期設定
//================================================================================================================
HRESULT CLight::Init()
{
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
	D3DXVECTOR3 vecDir[3];

	if (&m_aLight[0] == nullptr)
	{
		return E_FAIL;
	}

	vecDir[0] = D3DXVECTOR3(0.2f, -0.8f, 0.4f);
	vecDir[1] = D3DXVECTOR3(-0.18f, -0.88f, -0.44f);
	vecDir[2] = D3DXVECTOR3(0.9f, 0.1f, 0.4f);

	for (int nCntLight = 0; nCntLight < MAX_LIGHT; nCntLight++)
	{
		// ライトの種類を設定
		m_aLight[nCntLight].Type = D3DLIGHT_DIRECTIONAL;

		// ライトの拡散校を設定
		m_aLight[nCntLight].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

		// ライトの方向を設定
		//vecDir[nCntLight] = D3DXVECTOR3(0.2f, -0.6f, -0.4f);
		D3DXVec3Normalize(&vecDir[nCntLight], &vecDir[nCntLight]);	// ベクトルを正規化

		m_aLight[nCntLight].Direction = vecDir[nCntLight];

		// ライトを設定
		pDevice->SetLight(nCntLight, &m_aLight[nCntLight]);

		// ライトを有効にする
		pDevice->LightEnable(nCntLight, TRUE);
	}

	return S_OK;
}

//================================================================================================================
// 終了処理
//================================================================================================================
void CLight::Uninit()
{

}

//================================================================================================================
// 更新処理
//================================================================================================================
void CLight::Update()
{

}